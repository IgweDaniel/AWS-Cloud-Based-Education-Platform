service: cloud-learning-platform

provider:
  name: aws
  runtime: nodejs18.x
  region: us-east-1
  environment:
    USER_POOL_ID: ${param:USER_POOL_ID}
    CLIENT_ID: ${param:CLIENT_ID}
    FRONTEND_URL: ${param:FRONTEND_URL, 'https://cbep-client.vercel.app'}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - chime:CreateMeeting
        - chime:CreateAttendee
        - chime:GetMeeting
        - chime:DeleteMeeting
        - chime:DeleteAttendee
        - chime:ListAttendees
        - chime:ListMeetings
        - chime:GetAttendee
      Resource: "*"
    - Effect: Allow
      Action:
        - dynamodb:PutItem
        - dynamodb:GetItem
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:DeleteItem
        - dynamodb:UpdateItem
      Resource:
        - arn:aws:dynamodb:${self:provider.region}:*:table/Classes
        - arn:aws:dynamodb:${self:provider.region}:*:table/Classes/index/*
        - arn:aws:dynamodb:${self:provider.region}:*:table/Courses
        - arn:aws:dynamodb:${self:provider.region}:*:table/Courses/index/*
        - arn:aws:dynamodb:${self:provider.region}:*:table/Enrollments
        - arn:aws:dynamodb:${self:provider.region}:*:table/Meetings
        - arn:aws:dynamodb:${self:provider.region}:*:table/Meetings/index/*
    - Effect: Allow
      Action:
        - cognito-idp:AdminCreateUser
        - cognito-idp:AdminGetUser
        - cognito-idp:AdminSetUserPassword
        - cognito-idp:ListUsers
        - cognito-idp:AdminUpdateUserAttributes
      Resource:
        - arn:aws:cognito-idp:eu-north-1:*:userpool/${self:provider.environment.USER_POOL_ID}
        - arn:aws:cognito-idp:${self:provider.region}:*:userpool/${self:provider.environment.USER_POOL_ID}

functions:
  chimeEventHandler:
    handler: handler.processEvent
    events:
      - eventBridge:
          pattern:
            source:
              - "aws.chime"
            detail-type:
              - "Chime Meeting State Change" # Adjust for specific events (e.g., "Chime Meeting Ended")
  # checkMeetingStatus:
  #   handler: handler.checkMeetingStatus
  #   events:
  #     - schedule:
  #         rate: rate(5 minutes)
  #         enabled: false
  #         description: "Check and clean up stale meetings every 5 minutes"

  updateCourseTeacher:
    handler: handler.updateCourseTeacher
    events:
      - http:
          path: courses/{courseId}/teacher
          method: put
          cors: true
          request:
            parameters:
              paths:
                courseId: true

  getMeetingStatus:
    handler: handler.getMeetingStatus
    events:
      - http:
          path: meetings/{meetingId}/status
          method: get
          cors: true
          request:
            parameters:
              paths:
                meetingId: true

  createMeeting:
    handler: handler.createMeeting
    events:
      - http:
          path: create-meeting
          method: post
          cors: true

  joinMeeting:
    handler: handler.joinMeeting
    events:
      - http:
          path: join-meeting
          method: post
          cors: true

  assignRole:
    handler: handler.assignRole
    events:
      - http:
          path: users/role
          method: post
          cors: true

  createCourse:
    handler: handler.createCourse
    events:
      - http:
          path: courses
          method: post
          cors: true

  enrollStudent:
    handler: handler.enrollStudent
    events:
      - http:
          path: courses/{courseId}/enroll
          method: post
          cors: true

  getCourses:
    handler: handler.getCourses
    events:
      - http:
          path: courses
          method: get
          cors: true

  getCourseDetails:
    handler: handler.getCourseDetails
    events:
      - http:
          path: courses/{courseId}
          method: get
          cors: true

  getCourseMetadata:
    handler: handler.getCourseMetadata
    events:
      - http:
          path: courses/metadata
          method: get
          cors: true

  getAcademicTerms:
    handler: handler.getAcademicTerms
    events:
      - http:
          path: academic/terms
          method: get
          cors: true

  getCurrentTerm:
    handler: handler.getCurrentTerm
    events:
      - http:
          path: academic/current-term
          method: get
          cors: true

  getDepartments:
    handler: handler.getDepartments
    events:
      - http:
          path: academic/departments
          method: get
          cors: true

  createUser:
    handler: handler.createUser
    events:
      - http:
          path: users
          method: post
          cors: true

  listUsers:
    handler: handler.listUsers
    events:
      - http:
          path: users
          method: get
          cors: true

  assignUserRole:
    handler: handler.assignUserRole
    events:
      - http:
          path: users/role
          method: post
          cors: true

  # Teacher-specific endpoints
  getTeacherCourses:
    handler: handler.getTeacherCourses
    events:
      - http:
          path: courses/teacher
          method: get
          cors: true

  getTeacherActiveSessions:
    handler: handler.getTeacherActiveSessions
    events:
      - http:
          path: courses/teacher/active-sessions
          method: get
          cors: true

  startTeacherSession:
    handler: handler.startTeacherSession
    events:
      - http:
          path: courses/{courseId}/start-session
          method: post
          cors: true

  # TODO: consolidate with deleteMeeting
  endTeacherSession:
    handler: handler.endTeacherSession
    events:
      - http:
          path: courses/{courseId}/end-session
          method: post
          cors: true

  getCourseStudents:
    handler: handler.getCourseStudents
    events:
      - http:
          path: courses/{courseId}/students
          method: get
          cors: true

  joinCourse:
    handler: handler.joinCourse
    events:
      - http:
          path: courses/{courseId}/join
          method: get
          cors: true

plugins:
  - serverless-offline

resources:
  Resources:
    ClassesTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: Classes
        AttributeDefinitions:
          - AttributeName: classId
            AttributeType: S
          - AttributeName: teacherId
            AttributeType: S
        KeySchema:
          - AttributeName: classId
            KeyType: HASH
        GlobalSecondaryIndexes:
          - IndexName: TeacherIndex
            KeySchema:
              - AttributeName: teacherId
                KeyType: HASH
            Projection:
              ProjectionType: ALL
            ProvisionedThroughput:
              ReadCapacityUnits: 1
              WriteCapacityUnits: 1
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1

    CoursesTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: Courses
        AttributeDefinitions:
          - AttributeName: courseId
            AttributeType: S
          - AttributeName: teacherId
            AttributeType: S
        KeySchema:
          - AttributeName: courseId
            KeyType: HASH
        GlobalSecondaryIndexes:
          - IndexName: TeacherIndex
            KeySchema:
              - AttributeName: teacherId
                KeyType: HASH
            Projection:
              ProjectionType: ALL
            ProvisionedThroughput:
              ReadCapacityUnits: 1
              WriteCapacityUnits: 1
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1

    EnrollmentsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: Enrollments
        AttributeDefinitions:
          - AttributeName: courseId
            AttributeType: S
          - AttributeName: userId
            AttributeType: S
        KeySchema:
          - AttributeName: courseId
            KeyType: HASH
          - AttributeName: userId
            KeyType: RANGE
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1

    MeetingsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: Meetings
        AttributeDefinitions:
          - AttributeName: meetingId
            AttributeType: S
          - AttributeName: courseId
            AttributeType: S
        KeySchema:
          - AttributeName: meetingId
            KeyType: HASH
        GlobalSecondaryIndexes:
          - IndexName: ClassIndex
            KeySchema:
              - AttributeName: courseId
                KeyType: HASH
            Projection:
              ProjectionType: ALL
            ProvisionedThroughput:
              ReadCapacityUnits: 1
              WriteCapacityUnits: 1
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
